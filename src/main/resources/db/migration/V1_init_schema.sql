-- Creating ENUM-типов
CREATE TYPE task_priority AS ENUM ('low', 'medium', 'high');
CREATE TYPE task_status   AS ENUM ('pending', 'in_progress', 'completed', 'delayed');
CREATE TYPE user_role     AS ENUM ('employee', 'department_head', 'admin');

-- Table departments
CREATE TABLE departments (
                        id   INTEGER PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
                        name VARCHAR(255) NOT NULL
);

-- Table qualifications
CREATE TABLE qualifications (
                        id               INTEGER PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
                        experience_years INTEGER NOT NULL,
                        technologies     TEXT,
                        qualification    VARCHAR(50)
);

-- Table users
CREATE TABLE users (
                       id               INTEGER PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
                       username         VARCHAR(50)  NOT NULL UNIQUE,
                       password         VARCHAR(255) NOT NULL,
                       email            VARCHAR(255) NOT NULL,
                       role             user_role    NOT NULL,
                       first_name       VARCHAR(255),
                       last_name        VARCHAR(255),
                       created_at       TIMESTAMP    DEFAULT CURRENT_TIMESTAMP,
                       updated_at       TIMESTAMP    DEFAULT CURRENT_TIMESTAMP,
                       department_id    INTEGER,
                       qualification_id INTEGER,
                       last_login       TIMESTAMP,
                       CONSTRAINT fk_users_department    FOREIGN KEY(department_id)    REFERENCES departments(id)    ON DELETE SET NULL,
                       CONSTRAINT fk_users_qualification FOREIGN KEY(qualification_id) REFERENCES qualifications(id)
);

-- Table tasks
CREATE TABLE tasks (
                       id                     INTEGER PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
                       title                  VARCHAR(100) NOT NULL,
                       description            TEXT,
                       priority               task_priority DEFAULT 'low'     NOT NULL,
                       status                 task_status   DEFAULT 'pending' NOT NULL,
                       due_date               DATE,
                       assigned_to            INTEGER,
                       created_at             TIMESTAMP      DEFAULT CURRENT_TIMESTAMP,
                       updated_at             TIMESTAMP      DEFAULT CURRENT_TIMESTAMP,
                       required_qualification VARCHAR(20)   DEFAULT 'JUNIOR'  NOT NULL,
                       department_id          INTEGER,
                       CONSTRAINT fk_tasks_assigned_to FOREIGN KEY(assigned_to)      REFERENCES users(id),
                       CONSTRAINT fk_tasks_department  FOREIGN KEY(department_id)    REFERENCES departments(id)
);

-- Table notification
CREATE TABLE notification (
                        id           INTEGER PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
                        message      VARCHAR(255),
                        read         BOOLEAN NOT NULL,
                        user_id      INTEGER NOT NULL,
                        timestamp    TIMESTAMP,
                        reference_id INTEGER,
                        type         VARCHAR(255),
                        CONSTRAINT fk_notification_user FOREIGN KEY(user_id) REFERENCES users(id)
);

-- Table task_comments
CREATE TABLE task_comments (
                        id         INTEGER PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
                        task_id    INTEGER NOT NULL,
                        comment    VARCHAR(255),
                        timestamp  TIMESTAMP,
                        created_at TIMESTAMP,
                        CONSTRAINT fk_task_comments_task FOREIGN KEY(task_id) REFERENCES tasks(id)
);
